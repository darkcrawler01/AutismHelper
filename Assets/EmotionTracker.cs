//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Runtime.InteropServices;
using System;
using System.Reflection;

public class EmotionTracker : MonoBehaviour
{
	PXCMSenseManager _pxcmSenseManager;
	
	bool _recordToExternalFile = false;
	private Texture2D _operatorVideoTexture = null;
	
	public GameObject _operatorVideoScreen = null;
	
	private string[] EmotionLabels = {"ANGER","CONTEMPT","DISGUST","FEAR","JOY","SADNESS","SURPRISE"};
	private string[] SentimentLabels = {"NEGATIVE","POSITIVE","NEUTRAL"};
	
	public int NUM_EMOTIONS  = 10;
	public int NUM_PRIMARY_EMOTIONS = 7;
	
	public EmotionTracker ()
	{
	}
	
	
	private void InitializeRealSense()
	{
		_pxcmSenseManager = PXCMSenseManager.CreateInstance();
		if (_pxcmSenseManager == null) 
		{
			Debug.Log("PXCMSenseManager.CreateInstance() failed.");
			return;
		}
		
		pxcmStatus status = _pxcmSenseManager.EnableFace();
		if (status < pxcmStatus.PXCM_STATUS_NO_ERROR)
		{
			Debug.Log("PXCMSenseManager.EnableFace() failed.");
			return;
		}
		//		
		//		PXCMCaptureManager pxcmCaptureManager = _pxcmSenseManager.QueryCaptureManager();
		//		if (pxcmCaptureManager == null)
		//		{
		//			Debug.Log("PXCMSenseManager.QueryCaptureManager() failed.");
		//			return;
		//		}
		//		
		//		if (_recordToExternalFile)
		//		{
		//			var fileName = "Record_" + System.DateTime.Now.Ticks + ".rssdk";
		//			if (pxcmCaptureManager.SetFileName(fileName, true) < pxcmStatus.PXCM_STATUS_NO_ERROR)
		//			{
		//				Debug.Log("PXCMCaptureManager.SetFileName() failed.");
		//				return;
		//			}
		//		}
		//		
		//		PXCMFaceModule pxcmFaceModule = _pxcmSenseManager.QueryFace();
		//		if (pxcmFaceModule == null)
		//		{
		//			Debug.Log("PXCMSenseManager.QueryFace() failed.");
		//			return;
		//		}
		//		
		//		PXCMFaceConfiguration pxcmFaceConfiguration = pxcmFaceModule.CreateActiveConfiguration();		
		//		if (pxcmFaceConfiguration == null)
		//		{
		//			Debug.Log("PXCMFaceModule.CreateActiveConfiguration() failed.");
		//			return;
		//		}
		//		
		//		_pxcmFaceData = pxcmFaceModule.CreateOutput();
		//		if (_pxcmFaceData == null)
		//		{
		//			Debug.Log("PXCMFaceModule.CreateOutput() failed.");
		//			return;
		//		}
		//		
		//		_maxLandmarks = pxcmFaceConfiguration.landmarks.numLandmarks;
		//		
		//		PXCMFaceConfiguration.ExpressionsConfiguration pxcmExpressionsConfiguration = pxcmFaceConfiguration.QueryExpressions();
		//		if (pxcmExpressionsConfiguration == null)
		//		{
		//			Debug.Log("PXCMFaceConfiguration.QueryExpressions() failed.");
		//			return;
		//		}
		//		
		//		pxcmExpressionsConfiguration.Enable();
		//		pxcmExpressionsConfiguration.EnableAllExpressions();
		//		
		//		pxcmFaceConfiguration.detection.isEnabled = true;
		//		pxcmFaceConfiguration.landmarks.isEnabled = true;
		//		pxcmFaceConfiguration.pose.isEnabled =true;
		//		pxcmFaceConfiguration.ApplyChanges();
		//		pxcmFaceConfiguration.Dispose();
		//		
		/////////// EMOTION
		status = _pxcmSenseManager.EnableEmotion ();
		if (status < pxcmStatus.PXCM_STATUS_NO_ERROR) 
		{
			Debug.LogError("PXCMCaptureManager.EnableEmotion() failed with status: " + status + ".");
			return;
		}

		status = _pxcmSenseManager.Init();
		if (status < pxcmStatus.PXCM_STATUS_NO_ERROR) 
		{
			Debug.LogError("_pxcmSenseManager.Init() failed with status: " + status + ".");
			return;
		}
		/////////// EMOTION
		//		
		//		pxcmCaptureManager.FilterByStreamProfiles(PXCMCapture.StreamType.STREAM_TYPE_COLOR, 960, 540, 0);
		//		status = _pxcmSenseManager.Init();
		//		if (status < pxcmStatus.PXCM_STATUS_NO_ERROR) 
		//		{
		//			pxcmCaptureManager.FilterByStreamProfiles(PXCMCapture.StreamType.STREAM_TYPE_COLOR, 640, 480, 0);
		//			status = _pxcmSenseManager.Init();
		//			if (status < pxcmStatus.PXCM_STATUS_NO_ERROR) 
		//			{
		//				Debug.Log("PXCMCaptureManager.FilterByStreamProfiles() failed with status: " + status + ".");
		//				OnDisable();
		//				return;
		//			}
		//			else
		//			{
		//				_operatorVideoTexture = new Texture2D(640, 480, TextureFormat.ARGB32, false);
		//			}
		//		}
		//		else
		//		{
		//			_operatorVideoTexture = new Texture2D(960, 540, TextureFormat.ARGB32, false);
		//		}
		//		
		//		_operatorVideoScreen.renderer.material.mainTexture = _operatorVideoTexture;
	}
	private void UpdateEmotion()
	{
		
		PXCMEmotion ft = _pxcmSenseManager.QueryEmotion();
		if (ft == null)
		{
			return;
		}
		
		//GZ DisplayPicture(pp.QueryImageByType(PXCMImage.ImageType.IMAGE_TYPE_COLOR));
		PXCMCapture.Sample sample = _pxcmSenseManager.QueryEmotionSample();
		if (sample == null)
		{
			return;
		}
		
		int numFaces = ft.QueryNumFaces();
		for (int i=0; i<numFaces;i++) {
			/* Retrieve emotionDet location data */
			PXCMEmotion.EmotionData[] arrData = new PXCMEmotion.EmotionData[NUM_EMOTIONS];
			if(ft.QueryAllEmotionData(i, out arrData) >= pxcmStatus.PXCM_STATUS_NO_ERROR){
				bool emotionPresent = false;
				int epidx = -1; int maxscoreE = -3; float maxscoreI = 0;
				for (int j = 0; j < NUM_PRIMARY_EMOTIONS; j++)
				{
					if (arrData[j].evidence  < maxscoreE) continue;
					if (arrData[j].intensity < maxscoreI) continue;
					maxscoreE = arrData[j].evidence;
					maxscoreI = arrData[j].intensity;
					epidx = j;
				}
				if ((epidx != -1) && (maxscoreI > 0.4))
				{
					Debug.LogWarning( EmotionLabels[epidx]);
					
					emotionPresent = true;
				}
				
				int spidx = -1;
				if (emotionPresent)
				{
					maxscoreE = -3; maxscoreI = 0;
					for (int k = 0; k < (NUM_EMOTIONS - NUM_PRIMARY_EMOTIONS); k++)
					{
						if (arrData[NUM_PRIMARY_EMOTIONS + k].evidence  < maxscoreE) continue;
						if (arrData[NUM_PRIMARY_EMOTIONS + k].intensity < maxscoreI) continue;
						maxscoreE = arrData[NUM_PRIMARY_EMOTIONS + k].evidence;
						maxscoreI = arrData[NUM_PRIMARY_EMOTIONS + k].intensity;
						spidx = k;
					}
					if ((spidx != -1))
					{
						Debug.LogWarning( SentimentLabels[spidx]);
					}
				}
				
			}
		}
		
		
	}
	
	private void UpdateColorImage()
	{
		// Retrieve the color image if ready
		PXCMCapture.Sample pxcmSample = _pxcmSenseManager.QueryFaceSample();
		PXCMImage pxcmImage = pxcmSample.color;
		if (pxcmImage != null)
		{
			PXCMImage.ImageData pxcmImageData;
			pxcmImage.AcquireAccess(PXCMImage.Access.ACCESS_READ,PXCMImage.PixelFormat.PIXEL_FORMAT_RGB32, out pxcmImageData);
			pxcmImageData.ToTexture2D(0, _operatorVideoTexture);
			pxcmImage.ReleaseAccess(pxcmImageData);
			
			_operatorVideoTexture.Apply();
		}
	}
	
	public void Start()
	{
		InitializeRealSense ();
		Debug.Log ("Start");
	}

	public void Update()
	{
		if (_pxcmSenseManager == null)
		{
			return;
		}
		
		// Wait until any frame data is available
		if (_pxcmSenseManager.AcquireFrame(true) < pxcmStatus.PXCM_STATUS_NO_ERROR)
		{
			return;
		}
		
		Debug.Log ("Debug");
		
		// UpdateColorImage();
		
		UpdateEmotion ();
		
		// Process the next frame
		_pxcmSenseManager.ReleaseFrame();
	}
}

